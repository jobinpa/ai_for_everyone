import cv2
print(cv2.__version__)

WINDOW_WIDTH = 640
WINDOW_HEIGHT = 480
WINDOW_CENTER_X = int(WINDOW_WIDTH / 2) - 1
WINDOW_CENTER_Y = int(WINDOW_HEIGHT / 2) - 1
WINDOW_X = 0
WINDOW_Y = 0
WINDOW_NAME = 'Camera'

CIRCLE_RADIUS = 25
CIRCLE_COLOR = (0, 0, 255)
CIRCLE_THICKNESS = 4

RECTANGLE_FILL_COLOR = (255, 0, 0)
RECTANGLE_BORDER_COLOR = (0, 255, 0)
RECTANGLE_BORDER_THICKNESS = 4
RECTANGLE_WIDTH = 100
RECTANGLE_HEIGHT = 50
RECTANGLE_LEFT_UPPER_X = int(WINDOW_CENTER_X - RECTANGLE_WIDTH / 2)
RECTANGLE_LEFT_UPPER_Y = int(WINDOW_CENTER_Y - RECTANGLE_HEIGHT / 2)
RECTANGLE_RIGHT_LOWER_X = int(WINDOW_CENTER_X + RECTANGLE_WIDTH / 2)
RECTANGLE_RIGHT_LOWER_Y = int(WINDOW_CENTER_Y + RECTANGLE_HEIGHT / 2)

TEXT = 'Here I am!'
TEXT_FONT = cv2.FONT_HERSHEY_COMPLEX
TEXT_COLOR = (0, 0, 255)
TEXT_THICKNESS = 1
TEXT_SCALE = 1
(TEXT_WIDTH, TEXT_HEIGHT), _ = cv2.getTextSize(TEXT, TEXT_FONT, TEXT_SCALE, TEXT_THICKNESS)
TEXT_LEFT_LOWER_X = int(0 + WINDOW_WIDTH / 2 - TEXT_WIDTH / 2)
TEXT_LEFT_LOWER_Y = int(0 + TEXT_HEIGHT)

cam = cv2.VideoCapture(1, cv2.CAP_DSHOW)
cam.set(cv2.CAP_PROP_FRAME_WIDTH, WINDOW_WIDTH)
cam.set(cv2.CAP_PROP_FRAME_HEIGHT, WINDOW_HEIGHT)
cam.set(cv2.CAP_PROP_FPS, 30)
cam.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter_fourcc(*'MJPG'))

cv2.namedWindow(WINDOW_NAME, cv2.WINDOW_GUI_NORMAL)
cv2.moveWindow(WINDOW_NAME, WINDOW_X, WINDOW_Y)
cv2.resizeWindow(WINDOW_NAME, WINDOW_WIDTH, WINDOW_HEIGHT)

while True:
    _, frame = cam.read()

    cv2.rectangle(frame, (RECTANGLE_LEFT_UPPER_X, RECTANGLE_LEFT_UPPER_Y), (RECTANGLE_RIGHT_LOWER_X, RECTANGLE_RIGHT_LOWER_Y), RECTANGLE_FILL_COLOR, -1)
    cv2.rectangle(frame, (RECTANGLE_LEFT_UPPER_X, RECTANGLE_LEFT_UPPER_Y), (RECTANGLE_RIGHT_LOWER_X, RECTANGLE_RIGHT_LOWER_Y), RECTANGLE_BORDER_COLOR, RECTANGLE_BORDER_THICKNESS)
    cv2.circle(frame, (WINDOW_CENTER_X, WINDOW_CENTER_Y), CIRCLE_RADIUS, CIRCLE_COLOR, CIRCLE_THICKNESS)
    cv2.putText(frame, TEXT, (TEXT_LEFT_LOWER_X, TEXT_LEFT_LOWER_Y), TEXT_FONT, TEXT_SCALE, TEXT_COLOR, TEXT_THICKNESS)

    cv2.imshow(WINDOW_NAME, frame)
    if cv2.waitKey(1) & 0xff == ord('q'):
        break

cam.release()
cv2.destroyAllWindows()
